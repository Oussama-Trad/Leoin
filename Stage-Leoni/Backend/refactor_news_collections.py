#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Script de refactorisation des collections News
- Supprime les anciennes collections 'news' et 'news_interactions'
- Cr√©e une nouvelle collection 'news' simplifi√©e pour le syst√®me admin
- Structure adapt√©e pour ciblage par d√©partement et localisation
"""

from pymongo import MongoClient
import os
from datetime import datetime

def connect_to_mongodb():
    try:
        connection_string = os.getenv('MONGODB_URI', 'mongodb+srv://oussamatrzd19:oussama123@leoniapp.grhnzgz.mongodb.net/LeoniApp')
        client = MongoClient(connection_string)
        client.admin.command('ping')
        print("üîó Connexion MongoDB r√©ussie!")
        return client
    except Exception as e:
        print(f"‚ùå Erreur de connexion MongoDB: {e}")
        return None

def backup_existing_news():
    """Sauvegarder les anciennes donn√©es news avant suppression"""
    client = connect_to_mongodb()
    if not client:
        return False
    
    db = client['LeoniApp']
    
    try:
        # Sauvegarder les anciennes news
        old_news = list(db.news.find({}))
        old_interactions = list(db.news_interactions.find({}))
        
        print(f"üìä Anciennes donn√©es trouv√©es:")
        print(f"   ‚Ä¢ News: {len(old_news)} documents")
        print(f"   ‚Ä¢ Interactions: {len(old_interactions)} documents")
        
        if old_news:
            # Cr√©er une collection de sauvegarde
            backup_collection = db.news_backup
            backup_collection.insert_many(old_news)
            print(f"‚úÖ Sauvegarde cr√©√©e dans 'news_backup'")
        
        client.close()
        return True
    except Exception as e:
        print(f"‚ùå Erreur lors de la sauvegarde: {e}")
        client.close()
        return False

def drop_old_collections():
    """Supprimer les anciennes collections"""
    client = connect_to_mongodb()
    if not client:
        return False
    
    db = client['LeoniApp']
    
    try:
        # Supprimer les anciennes collections
        if 'news' in db.list_collection_names():
            db.news.drop()
            print("üóëÔ∏è Collection 'news' supprim√©e")
        
        if 'news_interactions' in db.list_collection_names():
            db.news_interactions.drop()
            print("üóëÔ∏è Collection 'news_interactions' supprim√©e")
        
        client.close()
        return True
    except Exception as e:
        print(f"‚ùå Erreur lors de la suppression: {e}")
        client.close()
        return False

def create_new_news_collection():
    """Cr√©er la nouvelle collection news simplifi√©e"""
    client = connect_to_mongodb()
    if not client:
        return False
    
    db = client['LeoniApp']
    news_collection = db.news
    
    try:
        # Cr√©er les index pour optimiser les requ√™tes
        print("üîß Cr√©ation des index...")
        
        # Index pour les requ√™tes par d√©partement et localisation
        news_collection.create_index([("targetDepartment", 1), ("targetLocation", 1)])
        news_collection.create_index([("publishedAt", -1)])  # Tri par date
        news_collection.create_index([("isActive", 1)])      # Filtrage actif/inactif
        news_collection.create_index([("authorId", 1)])      # Requ√™tes par auteur
        
        print("‚úÖ Index cr√©√©s avec succ√®s")
        
        # Ins√©rer quelques exemples de news pour test
        sample_news = [
            {
                "title": "Bienvenue dans le nouveau syst√®me de news",
                "description": "Cette news est visible par tous les employ√©s IT de Sousse.",
                "content": "Le nouveau syst√®me de news permet aux administrateurs de cibler sp√©cifiquement les employ√©s par d√©partement et localisation. Plus de r√©actions complexes, juste de l'information claire et cibl√©e.",
                "photos": [],
                "targetLocation": "Sousse",
                "targetDepartment": "IT", 
                "authorId": None,  # √Ä remplir par l'admin
                "authorName": "Syst√®me",
                "publishedAt": datetime.utcnow(),
                "isActive": True,
                "priority": "normal",  # low, normal, high, urgent
                "category": "general", # general, announcement, training, safety
                "createdAt": datetime.utcnow(),
                "updatedAt": datetime.utcnow()
            },
            {
                "title": "Nouvelle proc√©dure de s√©curit√©",
                "description": "Mise √† jour des protocoles de s√©curit√© pour tous les d√©partements de Messadine.",
                "content": "Tous les employ√©s de Messadine doivent prendre connaissance des nouvelles proc√©dures de s√©curit√© mises en place ce mois-ci.",
                "photos": [],
                "targetLocation": "Messadine",
                "targetDepartment": None,  # None = tous les d√©partements
                "authorId": None,
                "authorName": "S√©curit√©",
                "publishedAt": datetime.utcnow(),
                "isActive": True,
                "priority": "high",
                "category": "safety",
                "createdAt": datetime.utcnow(),
                "updatedAt": datetime.utcnow()
            }
        ]
        
        news_collection.insert_many(sample_news)
        print(f"‚úÖ {len(sample_news)} exemples de news ins√©r√©s")
        
        client.close()
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la cr√©ation: {e}")
        client.close()
        return False

def show_new_structure():
    """Afficher la nouvelle structure de la collection"""
    print("\nüìã Nouvelle structure de la collection 'news':")
    print("=" * 50)
    print("""
    {
        "_id": ObjectId,                    // ID unique MongoDB
        "title": String,                    // Titre de l'actualit√©
        "description": String,              // Description courte
        "content": String,                  // Contenu d√©taill√©
        "photos": [String],                 // URLs des photos (optionnel)
        
        // Ciblage
        "targetLocation": String,           // Location cibl√©e (ex: "Sousse", "Messadine")
        "targetDepartment": String|null,    // D√©partement cibl√© (null = tous)
        
        // Auteur
        "authorId": ObjectId|null,          // ID de l'admin qui a post√©
        "authorName": String,               // Nom de l'auteur
        
        // M√©tadonn√©es
        "publishedAt": Date,                // Date de publication
        "isActive": Boolean,                // Actif/inactif
        "priority": String,                 // "low", "normal", "high", "urgent"
        "category": String,                 // "general", "announcement", "training", "safety"
        
        // Timestamps
        "createdAt": Date,
        "updatedAt": Date
    }
    """)
    
    print("\nüéØ Logique de ciblage:")
    print("‚Ä¢ targetLocation = 'Sousse' + targetDepartment = 'IT' ‚Üí Seuls les employ√©s IT de Sousse")
    print("‚Ä¢ targetLocation = 'Messadine' + targetDepartment = null ‚Üí Tous les employ√©s de Messadine")
    print("‚Ä¢ targetLocation = null + targetDepartment = 'HR' ‚Üí Tous les employ√©s HR (toutes locations)")
    print("‚Ä¢ targetLocation = null + targetDepartment = null ‚Üí Tous les employ√©s")

if __name__ == "__main__":
    print("üöÄ Refactorisation des collections News")
    print("=" * 60)
    
    # √âtape 1: Sauvegarde
    print("\n1Ô∏è‚É£ Sauvegarde des donn√©es existantes...")
    if backup_existing_news():
        print("‚úÖ Sauvegarde r√©ussie")
    else:
        print("‚ö†Ô∏è Aucune donn√©e √† sauvegarder ou erreur")
    
    # √âtape 2: Suppression
    print("\n2Ô∏è‚É£ Suppression des anciennes collections...")
    if drop_old_collections():
        print("‚úÖ Suppression r√©ussie")
    else:
        print("‚ùå Erreur lors de la suppression")
        exit(1)
    
    # √âtape 3: Cr√©ation
    print("\n3Ô∏è‚É£ Cr√©ation de la nouvelle structure...")
    if create_new_news_collection():
        print("‚úÖ Nouvelle collection cr√©√©e avec succ√®s")
    else:
        print("‚ùå Erreur lors de la cr√©ation")
        exit(1)
    
    # √âtape 4: Documentation
    show_new_structure()
    
    print("\n" + "=" * 60)
    print("‚úÖ Refactorisation termin√©e avec succ√®s!")
    print("üìù Les anciennes donn√©es sont sauvegard√©es dans 'news_backup'")
