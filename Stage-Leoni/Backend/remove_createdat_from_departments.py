#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from pymongo import MongoClient
import os
from dotenv import load_dotenv

# Charger les variables d'environnement
load_dotenv()

def remove_createdat_from_departments():
    """
    Supprime le champ createdAt de tous les documents de la collection departments
    """
    try:
        # Configuration MongoDB Atlas
        username = os.getenv('MONGODB_USERNAME', 'oussamatrad99')
        password = os.getenv('MONGODB_PASSWORD', 'Trad2000')
        cluster_url = os.getenv('MONGODB_CLUSTER', 'cluster0.b3sav.mongodb.net')
        database_name = os.getenv('MONGODB_DATABASE', 'LeoniApp')
        
        # Construction de l'URI MongoDB
        mongo_uri = f"mongodb+srv://{username}:{password}@{cluster_url}/?retryWrites=true&w=majority&appName=Cluster0"
        
        print("üîó Connexion √† MongoDB Atlas...")
        client = MongoClient(mongo_uri)
        
        # S√©lectionner la base de donn√©es
        db = client[database_name]
        
        # V√©rifier la connexion
        db.admin.command('ping')
        print("‚úÖ Connexion r√©ussie √† MongoDB Atlas")
        
        # Acc√©der √† la collection departments
        departments_collection = db.departments
        
        # V√©rifier combien de documents ont le champ createdAt
        count_with_createdat = departments_collection.count_documents({"createdAt": {"$exists": True}})
        print(f"üìä Nombre de d√©partements avec createdAt: {count_with_createdat}")
        
        if count_with_createdat == 0:
            print("‚ÑπÔ∏è Aucun document avec le champ createdAt trouv√©")
            return
        
        # Supprimer le champ createdAt de tous les documents
        result = departments_collection.update_many(
            {"createdAt": {"$exists": True}},  # Filtre: documents qui ont le champ createdAt
            {"$unset": {"createdAt": ""}}      # Op√©ration: supprimer le champ createdAt
        )
        
        print(f"‚úÖ Champ createdAt supprim√© de {result.modified_count} d√©partement(s)")
        
        # V√©rifier que la suppression a bien fonctionn√©
        remaining_count = departments_collection.count_documents({"createdAt": {"$exists": True}})
        print(f"üìä Nombre de d√©partements avec createdAt apr√®s suppression: {remaining_count}")
        
        # Afficher quelques exemples de documents pour v√©rification
        print("\nüìã Exemples de d√©partements apr√®s suppression:")
        sample_docs = list(departments_collection.find({}, {"name": 1, "location": 1, "createdAt": 1}).limit(3))
        for i, doc in enumerate(sample_docs, 1):
            print(f"  {i}. {doc}")
        
        client.close()
        print("\nüéâ Suppression du champ createdAt termin√©e avec succ√®s!")
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la suppression du champ createdAt: {e}")
        return False
    
    return True

if __name__ == "__main__":
    print("üóëÔ∏è Suppression du champ createdAt de la collection departments")
    print("=" * 60)
    
    success = remove_createdat_from_departments()
    
    if success:
        print("\n‚úÖ Script termin√© avec succ√®s")
    else:
        print("\n‚ùå Le script a √©chou√©")
